<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Meta tags for character set and viewport -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Title of the page -->
    <title>Filtered Workers</title>
    <!-- Linking external CSS file for styling -->
    <link rel="stylesheet" href="/worker_display.css">
</head>

<body>
    <!-- Header section -->
    <header>
        <!-- Heading for the page -->
        <h1>Filtered Workers</h1>
        <!-- Link to navigate back to home page -->
        <a href="/home">Home</a>
    </header>
    <!-- Unordered list to display workers -->
    <ul>
        <!-- Loop through each worker and display their details -->
        <% workers.forEach(worker=> { %>
            <li>
                <!-- Display worker's name -->
                <strong>Name:</strong>
                <%= worker.name %><br>
                <!-- Display worker's age -->
                <strong>Age:</strong>
                <%= worker.age %><br>
                <!-- Display worker's gender -->
                <strong>Gender:</strong>
                <%= worker.gender %><br>
                <!-- Display worker's role -->
                <strong>Role:</strong>
                <%= worker.role %><br>
                <!-- Display worker's skill level -->
                <strong>Skill Level:</strong>
                <%= worker.skill_level %><br>
                <!-- Display whether the worker is active or not -->
                <strong>Active:</strong>
                <%= worker.active ? 'Yes' : 'No' %><br>
                <!-- Display worker's ID -->
                <strong>Worker ID:</strong>
                <%= worker.worker_id %><br>
                <!-- Button to allocate the worker to a work -->
                <button onclick="allocateWorker('<%= worker._id %>')">Allocate</button>
            </li>
            <!-- Horizontal line as separator between workers -->
            <hr>
        <% }); %>
    </ul>

    <!-- JavaScript script to handle worker allocation -->
    <script>
        function allocateWorker(workerId) {
            // Retrieve the work ID from the backend
            const workId = '<%= workId %>';
            // Fetch request to allocate the worker to the work
            fetch(`/allocateWorker/${workerId}/${workId}`, {
                method: 'PUT',
            })
                .then(response => {
                    // Check if the response is successful
                    if (!response.ok) {
                        if(response.status === 400) {
                            throw new Error('Worker not allocated');
                        } else {
                            throw new Error('Failed to allocate worker');
                        }
                    }
                    // Parse response data as JSON
                    return response.json();
                })
                .then(data => {
                    // Log success message if worker allocation is successful
                    console.log('Worker allocated successfully:', data);
                    // If worker is successfully allocated, reload the page to reflect changes
                    if (data.success) {
                        window.location.reload();
                    } else {
                        // Display error message if allocation fails
                        console.error('Error allocating worker:', data.message);
                    }
                })
                .catch(error => {
                    // Log error if worker allocation fails
                    console.error('Error allocating worker:', error);
                    // Display error message on screen
                    alert(error.message);
                });
        }
    </script>

    <!-- Footer section -->
    <footer>
        <!-- Copyright information -->
        <p>Copyright &copy;
            <script> document.write(new Date().getFullYear());</script>
        </p>
    </footer>
</body>
<!-- End of body -->

</html>
<!-- End of HTML document -->
